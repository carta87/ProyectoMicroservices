version: "3.9"

networks:
  microservices_network:
    external: true
    name: microservices_network

services:
  microservice-config:
    image: microservice-config-image:latest
    container_name: microservice-config
    build: ./microservice-config
    expose:
      - "8888"
    ports:
      - "8888:8888"
    networks:
      - microservices_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://microservice-config:8888/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  micro-service-eureka:
    image: microservice-eureka-image:latest
    container_name: micro-service-eureka
    build: ./microservice-eureka
    expose:
      - "8761"
    ports:
      - "8761:8761"
    networks:
      - microservices_network
    depends_on:
      microservice-config:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://micro-service-eureka:8761/eureka/apps || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql_container:
    image: mysql
    container_name: mysql_container_DB
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: micro_services
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    volumes:
      - mysql_container-volume:/var/lib/mysql
    expose:
      - "13306"
    ports:
      - "13306:3306"
    networks:
      - microservices_network

  postgrest_container:
    image: postgres
    container_name: postgrest_container_DB
    restart: unless-stopped
    environment:
      POSTGRES_DB: coursesDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_container-volume:/var/lib/postgresql/data
    expose:
      - "5435"
    ports:
      - "5435:5432"
    networks:
      - microservices_network

  micro-service-api-getewa:
    image: microservice-gateway-image:latest
    container_name: micro-service-api-getewa
    build: ./microservice-gateway
    expose:
      - "8080"
    ports:
      - "8080:8080"
    networks:
      - microservices_network
    depends_on:
      microservice-config:
        condition: service_healthy
      micro-service-eureka:
        condition: service_healthy

  micro-service-auth:
    image: microservice-auth-image:latest
    container_name: micro-service-auth
    build: ./microservice-auth
    expose:
      - "8092"
    ports:
      - "8092:8092"
    networks:
      - microservices_network
    depends_on:
      microservice-config:
        condition: service_healthy
      micro-service-eureka:
        condition: service_healthy

  micro-service-student:
    image: microservice-student-image:latest
    container_name: micro-service-student
    build: ./microservice-student
    expose:
      - "8090"
    ports:
      - "8090:8090"
    networks:
      - microservices_network
    depends_on:
      microservice-config:
        condition: service_healthy
      micro-service-eureka:
        condition: service_healthy

  micro-service-course:
    image: microservice-course-image:latest
    container_name: micro-service-course
    build: ./microservice-course
    expose:
      - "9090"
    ports:
      - "9090:9090"
    networks:
      - microservices_network
    depends_on:
      microservice-config:
        condition: service_healthy
      micro-service-eureka:
        condition: service_healthy

  micro-service-report:
    image: microservice-report-image:latest
    container_name: micro-service-report
    build: ./microservice-report
    expose:
      - "8091"
    ports:
      - "8091:8091"
    networks:
      - microservices_network
    depends_on:
      microservice-config:
        condition: service_healthy
      micro-service-eureka:
        condition: service_healthy

volumes:
  mysql_container-volume:
    driver: local
  postgres_container-volume:
    driver: local



